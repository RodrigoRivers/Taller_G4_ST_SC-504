CREATE TABLE Clientes
(
    cliente_id NUMBER(15),
    cliente_nombre VARCHAR(20),
    cliente_direccion VARCHAR(40),
    cliente_telefono NUMBER(8),
    CONSTRAINT cliente_pk PRIMARY KEY (cliente_id)
);

CREATE TABLE Repuestos
(
    repuesto_id NUMBER(15),
    repuesto_descripcion VARCHAR(30),
    repuesto_marca VARCHAR(25),
    repuesto_cantidad NUMBER(30),
    repuesto_precio NUMBER(20),
    CONSTRAINT repuesto_pk PRIMARY KEY (repuesto_id)
);

CREATE TABLE Maquinas
(
    maquina_id NUMBER(15),
    maquina_descripcion VARCHAR(30),
    maquina_cantidad NUMBER(20),
    CONSTRAINT maquina_pk PRIMARY KEY (maquina_id)
);

CREATE TABLE Herramientas
(
    herramienta_id NUMBER(15),
    herramienta_descripcion VARCHAR(30),
    herramienta_cantidad NUMBER(20),
    CONSTRAINT herramienta_pk PRIMARY KEY (herramienta_id)
);

CREATE TABLE Instrumentos
(
    instrumento_id NUMBER(15),
    instrumento_descripcion VARCHAR(30),
    instrumento_cantidad NUMBER(20),
    CONSTRAINT instrumento_pk PRIMARY KEY (instrumento_id)
);

CREATE TABLE Facturas
(
    factura_id NUMBER(15),
    cliente_id NUMBER(15),
    repuesto_id NUMBER(15),
    factura_monto NUMBER(20),
    factura_fecha VARCHAR(10),
    CONSTRAINT factura_pk PRIMARY KEY (factura_id),
    CONSTRAINT fk_factura_cliente FOREIGN KEY (cliente_id) REFERENCES Clientes(cliente_id),
    CONSTRAINT fk_factura_respuesto FOREIGN KEY (repuesto_id) REFERENCES Repuestos(repuesto_id)
);

CREATE TABLE Mecanicos
(
    mecanico_id NUMBER(15),
    mecanico_nombre VARCHAR(20),
    mecanico_direccion VARCHAR(30),
    mecanico_telefono NUMBER(8),
    CONSTRAINT mecanico_pk PRIMARY KEY (mecanico_id)
);

CREATE TABLE Vehiculos
(
    vehiculo_id NUMBER(15),
    cliente_id NUMBER(15),
    mecanico_id NUMBER(15),
    vehiculo_marca VARCHAR(25),
    vehiculo_modelo VARCHAR(25),
    vehiculo_placa VARCHAR(7),
    CONSTRAINT vehiculo_pk PRIMARY KEY (vehiculo_id),
    CONSTRAINT fk_vehiculo_cliente FOREIGN KEY (cliente_id) REFERENCES Clientes(cliente_id),
    CONSTRAINT fk_vehiculo_mecanico FOREIGN KEY (mecanico_id) REFERENCES Mecanicos(mecanico_id)
);

CREATE TABLE Sucursales
(
    sucursal_id NUMBER(15),
    sucursal_direccion VARCHAR(30),
    sucursal_telefono NUMBER(8),
    CONSTRAINT sucursal_pk PRIMARY KEY (sucursal_id)
);

CREATE TABLE Citas
(
    cita_id NUMBER(15),
    cliente_id NUMBER(15),
    mecanico_id NUMBER(15),
    sucursal_id NUMBER(15),
    cita_descripcion VARCHAR(30),
    cita_fecha VARCHAR(10),
    cita_hora VARCHAR(5),
    CONSTRAINT cita_pk PRIMARY KEY (cita_id),
    CONSTRAINT fk_cita_cliente FOREIGN KEY (cliente_id) REFERENCES Clientes(cliente_id),
    CONSTRAINT fk_cita_mecanico FOREIGN KEY (mecanico_id) REFERENCES Mecanicos(mecanico_id),
    CONSTRAINT fk_cita_sucursal FOREIGN KEY (sucursal_id) REFERENCES Sucursales(sucursal_id)
);

---

INSERT INTO Clientes (cliente_id, cliente_nombre, cliente_direccion, cliente_telefono)
VALUES (1, 'Juan Perez', 'Calle 1, Ciudad', 12345678);

INSERT INTO Repuestos (repuesto_id, repuesto_descripcion, repuesto_marca, repuesto_cantidad, repuesto_precio)
VALUES (1, 'Bateria', 'ACME', 10, 100.00);

INSERT INTO Maquinas (maquina_id, maquina_descripcion, maquina_cantidad)
VALUES (1, 'Torno', 5);

INSERT INTO Herramientas (herramienta_id, herramienta_descripcion, herramienta_cantidad)
VALUES (1, 'Martillo', 20);

INSERT INTO Instrumentos (instrumento_id, instrumento_descripcion, instrumento_cantidad)
VALUES (1, 'Multimetro', 10);

INSERT INTO Facturas (factura_id, cliente_id, repuesto_id, factura_monto, factura_fecha)
VALUES (1, 1, 1, 1000.00, '2023-03-24');

INSERT INTO Mecanicos (mecanico_id, mecanico_nombre, mecanico_direccion, mecanico_telefono)
VALUES (1, 'Pedro Ramirez', 'Calle 2, Ciudad', 87654321);

INSERT INTO Vehiculos (vehiculo_id, cliente_id, mecanico_id, vehiculo_marca, vehiculo_modelo, vehiculo_placa)
VALUES (1, 1, 1, 'Toyota', 'Corolla', 'ABC123');

INSERT INTO Sucursales (sucursal_id, sucursal_direccion, sucursal_telefono)
VALUES (1, 'Calle 3, Ciudad', 24681012);

INSERT INTO Citas (cita_id, cliente_id, mecanico_id, sucursal_id, cita_descripcion, cita_fecha, cita_hora)
VALUES (1, 1, 1, 1, 'Cambio de aceite', '2023-03-25', '10:00');

---

CREATE OR REPLACE FUNCTION CLIENTE_BUSCADOR_F(F_CODIGO IN NUMBER) 
    RETURN VARCHAR2
    IS 
    F_NOMBRE VARCHAR2(20);
BEGIN 
    SELECT cliente_nombre INTO F_NOMBRE
    FROM Clientes
    WHERE cliente_id = F_CODIGO;

    RETURN ('El codigo ' || F_CODIGO || ' pertenece al cliente ' || F_NOMBRE || '.');  
END;

DECLARE 
	MENSAJE VARCHAR2(100); 
BEGIN 
	MENSAJE := CLIENTE_BUSCADOR_F(1); 
	DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION REPUESTO_BUSCADOR_F(F_CODIGO IN NUMBER) 
    RETURN VARCHAR2
    IS 
    F_DESCRIPCION VARCHAR2(30);
BEGIN 
    SELECT repuesto_descripcion INTO F_DESCRIPCION
    FROM Repuestos
    WHERE repuesto_id = F_CODIGO;

    RETURN ('El codigo ' || F_CODIGO || ' pertenece al repuesto ' || F_DESCRIPCION || '.');  
END;

DECLARE 
	MENSAJE VARCHAR2(100); 
BEGIN 
	MENSAJE := REPUESTO_BUSCADOR_F(1); 
	DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION MAQUINA_BUSCADOR_F(F_CODIGO IN NUMBER) 
    RETURN VARCHAR2
    IS 
    F_DESCRIPCION VARCHAR2(30);
BEGIN 
    SELECT maquina_descripcion INTO F_DESCRIPCION
    FROM Maquinas
    WHERE maquina_id = F_CODIGO;

    RETURN ('El codigo ' || F_CODIGO || ' pertenece a la maquina ' || F_DESCRIPCION || '.');  
END;

DECLARE 
	MENSAJE VARCHAR2(100); 
BEGIN 
	MENSAJE := MAQUINA_BUSCADOR_F(1); 
	DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION HERRAMIENTA_BUSCADOR_F(F_CODIGO IN NUMBER) 
    RETURN VARCHAR2
    IS 
    F_DESCRIPCION VARCHAR2(30);
BEGIN 
    SELECT herramienta_descripcion INTO F_DESCRIPCION
    FROM Herramientas
    WHERE herramienta_id = F_CODIGO;

    RETURN ('El codigo ' || F_CODIGO || ' pertenece a la herramienta ' || F_DESCRIPCION || '.');  
END;

DECLARE 
	MENSAJE VARCHAR2(100); 
BEGIN 
	MENSAJE := HERRAMIENTA_BUSCADOR_F(1); 
	DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION INSTRUMENTO_BUSCADOR_F(F_CODIGO IN NUMBER) 
    RETURN VARCHAR2
    IS 
    F_DESCRIPCION VARCHAR2(30);
BEGIN 
    SELECT instrumento_descripcion INTO F_DESCRIPCION
    FROM Instrumentos
    WHERE instrumento_id = F_CODIGO;

    RETURN ('El codigo ' || F_CODIGO || ' pertenece al instrumento ' || F_DESCRIPCION || '.');  
END;

DECLARE 
	MENSAJE VARCHAR2(100); 
BEGIN 
	MENSAJE := INSTRUMENTO_BUSCADOR_F(1); 
	DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION VEHICULO_BUSCADOR_F(F_CODIGO IN NUMBER) 
    RETURN VARCHAR2
    IS 
    F_PLACA VARCHAR2(7);
BEGIN 
    SELECT vehiculo_placa INTO F_PLACA
    FROM Vehiculos
    WHERE vehiculo_id = F_CODIGO;

    RETURN ('El codigo ' || F_CODIGO || ' pertenece al vehiculo con placa ' || F_PLACA || '.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := VEHICULO_BUSCADOR_F(1); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION SUCURSAL_BUSCADOR_F(F_CODIGO IN NUMBER) 
    RETURN VARCHAR2
    IS 
    F_DIRECCION VARCHAR2(30);
BEGIN 
    SELECT sucursal_direccion INTO F_DIRECCION
    FROM Sucursales
    WHERE sucursal_id = F_CODIGO;

    RETURN ('El codigo ' || F_CODIGO || ' pertenece a la sucursal ubicada en ' || F_DIRECCION || '.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := SUCURSAL_BUSCADOR_F(1); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION CITA_BUSCADOR_F(F_CODIGO IN NUMBER) 
    RETURN VARCHAR2
    IS 
    F_DESCRIPCION VARCHAR2(30);
BEGIN 
    SELECT cita_descripcion INTO F_DESCRIPCION
    FROM Citas
    WHERE cita_id = F_CODIGO;

    RETURN ('El codigo ' || F_CODIGO || ' corresponde a la cita con la descripcion: ' || F_DESCRIPCION || '.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := CITA_BUSCADOR_F(1); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION CLIENTE_TOTAL_F
    RETURN VARCHAR2
    IS 
    F_TOTAL NUMBER(20);
BEGIN 
    SELECT COUNT(*) INTO F_TOTAL
    FROM Clientes;

    RETURN ('Existe un total de ' || F_TOTAL || ' cliente/s.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := CLIENTE_TOTAL_F(); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION REPUESTO_TOTAL_F
    RETURN VARCHAR2
    IS 
    F_TOTAL NUMBER(20);
BEGIN 
    SELECT COUNT(*) INTO F_TOTAL
    FROM Repuestos;

    RETURN ('Existe un total de ' || F_TOTAL || ' repuesto/s.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := REPUESTO_TOTAL_F(); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION MAQUINA_TOTAL_F
    RETURN VARCHAR2
    IS 
    F_TOTAL NUMBER(20);
BEGIN 
    SELECT COUNT(*) INTO F_TOTAL
    FROM Maquinas;

    RETURN ('Existe un total de ' || F_TOTAL || ' m√°quina/s.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := MAQUINA_TOTAL_F(); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION HERRAMIENTA_TOTAL_F
    RETURN VARCHAR2
    IS 
    F_TOTAL NUMBER(20);
BEGIN 
    SELECT COUNT(*) INTO F_TOTAL
    FROM Herramientas;

    RETURN ('Existe un total de ' || F_TOTAL || ' herramienta/s.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := HERRAMIENTA_TOTAL_F(); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION INSTRUMENTO_TOTAL_F
    RETURN VARCHAR2
    IS 
    F_TOTAL NUMBER(20);
BEGIN 
    SELECT COUNT(*) INTO F_TOTAL
    FROM Instrumentos;

    RETURN ('Existe un total de ' || F_TOTAL || ' instrumento/s.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := INSTRUMENTO_TOTAL_F(); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION FACTURA_TOTAL_F
    RETURN VARCHAR2
    IS 
    F_TOTAL NUMBER(20);
BEGIN 
    SELECT COUNT(*) INTO F_TOTAL
    FROM Facturas;

    RETURN ('Existe un total de ' || F_TOTAL || ' factura/s.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := FACTURA_TOTAL_F(); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION MECANICO_TOTAL_F
    RETURN VARCHAR2
    IS 
    F_TOTAL NUMBER(20);
BEGIN 
    SELECT COUNT(*) INTO F_TOTAL
    FROM Mecanicos;

    RETURN ('Existe un total de ' || F_TOTAL || ' mec√°nico/s.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := MECANICO_TOTAL_F(); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION VEHICULO_TOTAL_F
    RETURN VARCHAR2
IS 
    F_TOTAL NUMBER(20);
BEGIN 
    SELECT COUNT(*) INTO F_TOTAL
    FROM Vehiculos;

    RETURN ('Existe un total de ' || F_TOTAL || ' veh√≠culo/s.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := VEHICULO_TOTAL_F(); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION SUCURSAL_TOTAL_F
    RETURN VARCHAR2
IS 
    F_TOTAL NUMBER(20);
BEGIN 
    SELECT COUNT(*) INTO F_TOTAL
    FROM Sucursales;

    RETURN ('Existe un total de ' || F_TOTAL || ' sucursal/es.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := SUCURSAL_TOTAL_F(); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;

CREATE OR REPLACE FUNCTION CITA_TOTAL_F
    RETURN VARCHAR2
IS 
    F_TOTAL NUMBER(20);
BEGIN 
    SELECT COUNT(*) INTO F_TOTAL
    FROM Citas;

    RETURN ('Existe un total de ' || F_TOTAL || ' cita/s.');  
END;

DECLARE 
    MENSAJE VARCHAR2(100); 
BEGIN 
    MENSAJE := CITA_TOTAL_F(); 
    DBMS_OUTPUT.PUT_LINE(MENSAJE);  
END;