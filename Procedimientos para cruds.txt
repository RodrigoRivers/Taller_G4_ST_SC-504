----Crud de Repuestos ----------

----Insertar procedure -------

CREATE OR REPLACE PROCEDURE INSERTARREPUESTO (
  N_REPUESTO_ID IN NUMBER,
  N_REPUESTO_DESCRIPCION IN VARCHAR2,
  N_REPUESTO_MARCA IN VARCHAR2,
  N_REPUESTO_CANTIDAD IN NUMBER,
  N_REPUESTO_PRECIO IN NUMBER
)
AS
BEGIN
  INSERT INTO REPUESTOS (
    REPUESTO_ID,
    REPUESTO_DESCRIPCION,
    REPUESTO_MARCA,
    REPUESTO_CANTIDAD,
    REPUESTO_PRECIO
  ) VALUES (
    N_REPUESTO_ID,
    N_REPUESTO_DESCRIPCION,
    N_REPUESTO_MARCA,
    N_REPUESTO_CANTIDAD,
    N_REPUESTO_PRECIO
  );
END INSERTARREPUESTO;

SELECT * FROM REPUESTOS;

----- eliminar procedure --------

CREATE OR REPLACE PROCEDURE eliminarRepuesto(
    n_REPUESTO_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM REPUESTOS WHERE REPUESTO_ID = n_REPUESTO_ID;
    DBMS_OUTPUT.PUT_LINE('Registro eliminado exitosamente');
END;





----- actualizar ----------------

CREATE OR REPLACE PROCEDURE actualizarRepuesto(
   n_REPUESTO_ID IN NUMBER,
   n_REPUESTO_DESCRIPCION IN VARCHAR2,
   n_REPUESTO_MARCA IN VARCHAR2,
   n_REPUESTO_CANTIDAD IN NUMBER,
   n_REPUESTO_PRECIO IN NUMBER
)
IS
BEGIN
   UPDATE REPUESTOS
   SET 
      REPUESTO_DESCRIPCION = n_REPUESTO_DESCRIPCION,
      REPUESTO_MARCA = n_REPUESTO_MARCA,
      REPUESTO_CANTIDAD = n_REPUESTO_CANTIDAD,
      REPUESTO_PRECIO = n_REPUESTO_PRECIO
   WHERE
      REPUESTO_ID = n_REPUESTO_ID;
END;

BEGIN
   actualizarRepuesto(2, 'casa', 'Nueva marca', 10, 100);
END;
/

----- SELECT --------------------


---- CRUD PARA Clientes -------

------- INSERT CLIENTES --------
CREATE OR REPLACE PROCEDURE INSERTARCLIENTE (
  N_CLIENTE_ID IN NUMBER,
  N_CLIENTE_NOMBRE IN VARCHAR2,
  N_CLIENTE_DIRECCION IN VARCHAR2,
  N_CLIENTE_TELEFONO IN NUMBER
)
AS
BEGIN
  INSERT INTO CLIENTES_T (
    CLIENTE_ID,
    CLIENTE_NOMBRE,
    CLIENTE_DIRECCION,
    CLIENTE_TELEFONO
  ) VALUES (
    N_CLIENTE_ID,
    N_CLIENTE_NOMBRE,
    N_CLIENTE_DIRECCION,
    N_CLIENTE_TELEFONO
  );
END INSERTARCLIENTE;

SELECT * FROM CLIENTES_T;

----- eliminar procedure --------

CREATE OR REPLACE PROCEDURE eliminarCliente(
    N_CLIENTE_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM CLIENTES_T WHERE CLIENTE_ID = N_CLIENTE_ID;
    DBMS_OUTPUT.PUT_LINE('Registro eliminado exitosamente');
END;





----- actualizar ----------------

CREATE OR REPLACE PROCEDURE actualizarCliente(
   N_CLIENTE_ID IN NUMBER,
  N_CLIENTE_NOMBRE IN VARCHAR2,
  N_CLIENTE_DIRECCION IN VARCHAR2,
  N_CLIENTE_TELEFONO IN NUMBER
)
IS
BEGIN
   UPDATE CLIENTE_T
   SET 
      CLIENTE_NOMBRE = N_CLIENTE_NOMBRE,
      CLIENTE_DIRECCION = N_CLIENTE_DIRECCION,
      CLIENTE_TELEFONO = N_CLIENTE_TELEFONO
   WHERE
      CLIENTE_ID = N_CLIENTE_ID;
END;

BEGIN
   actualizarCliente();
END;
----- SELECT -----------------------

----  CRUD PARA Maquinas -------

------- INSERT Maquinas --------
CREATE OR REPLACE PROCEDURE INSERTARMAQUINA (
  N_MAQUINA_ID IN NUMBER,
  N_MAQUINA_DESCRIPCION IN VARCHAR2,
  N_MAQUINA_CANTIDAD IN NUMBER
)
AS
BEGIN
  INSERT INTO MAQUINAS (
    MAQUINA_ID,
    MAQUINA_DESCRIPCION,
    MAQUINA_CANTIDAD
  ) VALUES (
    N_MAQUINA_ID,
    N_MAQUINA_DESCRIPCION,
    N_MAQUINA_CANTIDAD
    
  );
END INSERTARMAQUINA;

SELECT * FROM MAQUINAS;

----- eliminar procedure --------

CREATE OR REPLACE PROCEDURE eliminarMaquina(
    N_MAQUINA_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM MAQUINAS WHERE  MAQUINA_ID = N_MAQUINA_ID;
    DBMS_OUTPUT.PUT_LINE('Registro eliminado exitosamente');
END;





----- actualizar ----------------

CREATE OR REPLACE PROCEDURE actualizarMaquina(
  N_MAQUINA_ID IN NUMBER,
  N_MAQUINA_DESCRIPCION IN VARCHAR2,
  N_MAQUINA_CANTIDAD IN NUMBER
)
IS
BEGIN
   UPDATE MAQUINAS
   SET 
      MAQUINA_DESCRIPCION = N_MAQUINA_DESCRIPCION,
      MAQUINA_CANTIDAD = N_MAQUINA_CANTIDAD
   WHERE
      MAQUINA_ID = N_MAQUINA_ID;
END;

BEGIN
   actualizarMaquina();
END;
----- SELECT -----------------------







---- CRUD PARA HERRAMINTAS -------


------- INSERT HERRAMIENTAS --------
CREATE OR REPLACE PROCEDURE INSERTARHERRAMIENTAS  (
  N_HERRAMIENTA_ID IN NUMBER,
  N_HERRAMIENTA_DESCRIPCION IN VARCHAR2,
  N_HERRAMIENTA_CANTIDAD IN NUMBER
)
AS
BEGIN
  INSERT INTO HERRAMIENTAS (
    HERRAMIENTA_ID,
    HERRAMIENTA_DESCRIPCION,
    HERRAMIENTA_CANTIDAD
  ) VALUES (
    N_HERRAMIENTA_ID,
    N_HERRAMIENTA_DESCRIPCION,
    N_HERRAMIENTA_CANTIDAD
    
  );
END INSERTARHERRAMIENTA;

SELECT * FROM HERRAMIENTAS;

----- eliminar procedure --------

CREATE OR REPLACE PROCEDURE eliminarHerramienta(
    N_HERRAMIENTA_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM HERRAMIENTAS WHERE  HERRAMIENTA_ID = N_HERRAMIENTA_ID;
    DBMS_OUTPUT.PUT_LINE('Registro eliminado exitosamente');
END;





----- actualizar ----------------

CREATE OR REPLACE PROCEDURE actualizarHerramienta(
  N_HERRAMIENTA_ID IN NUMBER,
  N_HERRAMIENTA_DESCRIPCION IN VARCHAR2,
  N_HERRAMIENTA_CANTIDAD IN NUMBER
)
IS
BEGIN
   UPDATE HERRAMIENTAS
   SET 
      HERRAMIENTA_DESCRIPCION = N_HERRAMIENTA_DESCRIPCION,
      HERRAMIENTA_CANTIDAD = N_HERRAMIENTA_CANTIDAD
   WHERE
      HERRAMIENTA_ID = N_HERRAMIENTA_ID;
END;

BEGIN
   actualizarHerramienta();
END;
----- SELECT -----------------------










---- CRUD PARA INSTRUMENTOS ---------


------- INSERT INSTRUMENTOS --------
CREATE OR REPLACE PROCEDURE INSERTARINSTRUMENTOS  (
  N_INSTRUMENTO_ID IN NUMBER,
  N_INSTRUMENTO_DESCRIPCION IN VARCHAR2,
  N_INSTRUMENTO_CANTIDAD IN NUMBER
)
AS
BEGIN
  INSERT INTO INSTRUMENTOS (
    INSTRUMENTO_ID,
    INSTRUMENTO_DESCRIPCION,
    INSTRUMENTO_CANTIDAD
  ) VALUES (
    N_INSTRUMENTO_ID,
    N_INSTRUMENTO_DESCRIPCION,
    N_INSTRUMENTO_CANTIDAD
    
  );
END INSERTARINSTRUMENTOS;

SELECT * FROM INSTRUMENTOS;

----- eliminar procedure --------

CREATE OR REPLACE PROCEDURE eliminarInstrumentos(
    N_INSTRUMENTO_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM INSTRUMENTOS WHERE  INSTRUMENTO_ID = N_INSTRUMENTO_ID;
    DBMS_OUTPUT.PUT_LINE('Registro eliminado exitosamente');
END;





----- actualizar ----------------

CREATE OR REPLACE PROCEDURE actualizarInstrumentos(
  N_INSTRUMENTO_ID IN NUMBER,
  N_INSTRUMENTO_DESCRIPCION IN VARCHAR2,
  N_INSTRUMENTO_CANTIDAD IN NUMBER
)
IS
BEGIN
   UPDATE INSTRUMENTOS
   SET 
      INSTRUMENTO_DESCRIPCION = N_INSTRUMENTO_DESCRIPCION,
      INSTRUMENTO_CANTIDAD = N_INSTRUMENTO_CANTIDAD
   WHERE
      INSTRUMENTO_ID = N_INSTRUMENTO_ID;
END;

BEGIN
   actualizarInstrumentos();
END;
----- SELECT -----------------------








---- Crud facturas ----------



------- INSERT INSTRUMENTOS --------
CREATE OR REPLACE PROCEDURE INSERTARINSTRUMENTOS  (
  N_INSTRUMENTO_ID IN NUMBER,
  N_INSTRUMENTO_DESCRIPCION IN VARCHAR2,
  N_INSTRUMENTO_CANTIDAD IN NUMBER
)
AS
BEGIN
  INSERT INTO INSTRUMENTOS (
    INSTRUMENTO_ID,
    INSTRUMENTO_DESCRIPCION,
    INSTRUMENTO_CANTIDAD
  ) VALUES (
    N_INSTRUMENTO_ID,
    N_INSTRUMENTO_DESCRIPCION,
    N_INSTRUMENTO_CANTIDAD
    
  );
END INSERTARINSTRUMENTOS;

SELECT * FROM INSTRUMENTOS;

----- eliminar procedure --------

CREATE OR REPLACE PROCEDURE eliminarInstrumentos(
    N_INSTRUMENTO_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM INSTRUMENTOS WHERE  INSTRUMENTO_ID = N_INSTRUMENTO_ID;
    DBMS_OUTPUT.PUT_LINE('Registro eliminado exitosamente');
END;





----- actualizar ----------------

CREATE OR REPLACE PROCEDURE actualizarInstrumentos(
  N_INSTRUMENTO_ID IN NUMBER,
  N_INSTRUMENTO_DESCRIPCION IN VARCHAR2,
  N_INSTRUMENTO_CANTIDAD IN NUMBER
)
IS
BEGIN
   UPDATE INSTRUMENTOS
   SET 
      INSTRUMENTO_DESCRIPCION = N_INSTRUMENTO_DESCRIPCION,
      INSTRUMENTO_CANTIDAD = N_INSTRUMENTO_CANTIDAD
   WHERE
      INSTRUMENTO_ID = N_INSTRUMENTO_ID;
END;

BEGIN
   actualizarInstrumentos();
END;
----- SELECT -----------------------








----- CRUD MECANICOS --------


------- INSERT MECANICOS --------
CREATE OR REPLACE PROCEDURE INSERTARMECANICOS  (
  N_MECANICO_ID IN NUMBER,
  N_MECANICO_NOMBRE IN VARCHAR2,
  N_MECANICO_DIRECCION IN VARCHAR2,
  N_MECANICO_TELEFONO IN NUMBER
)
AS
BEGIN
  INSERT INTO MECANICOS (
    MECANICO_ID ,
    MECANICO_NOMBRE,
    MECANICO_DIRECCION,
    MECANICO_TELEFONO
  ) VALUES (
    N_MECANICO_ID,
    N_MECANICO_NOMBRE,
    N_MECANICO_DIRECCION,
    N_MECANICO_TELEFONO
    
  );
END INSERTARMECANICOS;

SELECT * FROM MECANICOS;

----- eliminar procedure --------

CREATE OR REPLACE PROCEDURE eliminarMecanicos(
    N_MECANICO_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM MECANICOS WHERE  MECANICO_ID = N_MECANICO_ID;
    DBMS_OUTPUT.PUT_LINE('Registro eliminado exitosamente');
END;





----- actualizar ----------------

CREATE OR REPLACE PROCEDURE actualizarMecanicos(
  N_MECANICO_ID IN NUMBER,
  N_MECANICO_NOMBRE IN VARCHAR2,
  N_MECANICO_DIRECCION IN VARCHAR2,
  N_MECANICO_TELEFONO IN NUMBER
)
IS
BEGIN
   UPDATE MECANICOS
   SET 
      MECANICO_NOMBRE = N_MECANICO_NOMBRE,
      MECANICO_DIRECCION = N_MECANICO_DIRECCION,
      MECANICO_TELEFONO = N_MECANICO_TELEFONO
   WHERE
      MECANICO_ID = N_MECANICO_ID;
END;

BEGIN
   actualizarMecanicos();
END;
----- SELECT -----------------------






---- CRUD VEHICULOS ---------

------- INSERT VEHICULOS --------
CREATE OR REPLACE PROCEDURE INSERTARVEHICULOS (
  N_VEHICULO_ID IN NUMBER,
  N_CLIENTE_ID IN NUMBER,
  N_MECANICO_ID IN NUMBER,
  N_VEHICULO_MARCA IN VARCHAR2,
  N_VEHICULO_MODELO IN VARCHAR2,
  N_VEHICULO_PLACA IN VARCHAR2
)
AS
BEGIN
  INSERT INTO VEHICULOS (
    VEHICULO_ID ,
    CLIENTE_ID,
    MECANICO_ID,
    VEHICULO_MARCA,
    VEHICULO_MODELO,
    VEHICULO_PLACA
  ) VALUES (
    N_VEHICULO_ID,
    N_CLIENTE_ID,
    N_MECANICO_ID,
    N_VEHICULO_MARCA,
    N_VEHICULO_MODELO,
    N_VEHICULO_PLACA
    
  );
END INSERTARVEHICULOS;

SELECT * FROM VEHICULOS;

----- eliminar procedure --------

CREATE OR REPLACE PROCEDURE eliminarVehiculos(
    N_VEHICULO_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM VEHICULOS WHERE  VEHICULO_ID = N_VEHICULO_ID;
    DBMS_OUTPUT.PUT_LINE('Registro eliminado exitosamente');
END;





----- actualizar ----------------

CREATE OR REPLACE PROCEDURE actualizarVehiculos(
  N_VEHICULO_ID IN NUMBER,
  N_CLIENTE_ID IN NUMBER,
  N_MECANICO_ID IN NUMBER,
  N_VEHICULO_MARCA IN VARCHAR2,
  N_VEHICULO_MODELO IN VARCHAR2,
  N_VEHICULO_PLACA IN VARCHAR2R
)
IS
BEGIN
   UPDATE MECANICOS
   SET 
      CLIENTE_ID = N_CLIENTE_ID,
      MECANICO_ID = N_MECANICO_ID,
      VEHICULO_MARCA = N_VEHICULO_MARCA,
      VEHICULO_MODELO = N_VEHICULO_MODELO,
      VEHICULO_PLACA = N_VEHICULO_PLACA
   WHERE
      VEHICULO_ID = N_VEHICULO_ID;
END;

BEGIN
   actualizarVehiculos();
END;
----- SELECT -----------------------




---- CRUD SUCURSALES ------------




------- INSERT SUCURSALES --------
CREATE OR REPLACE PROCEDURE INSERTARSucursales(
  N_SUCURSAL_ID IN NUMBER,
  N_SUCURSAL_DIRECCION IN VARCHAR2,
  N_SUCURSAL_TELEFONO IN NUMBER
)
AS
BEGIN
  INSERT INTO SUCURSALES (
    SUCURSAL_ID,
    SUCURSAL_DIRECCION,
    SUCURSAL_TELEFONO

  ) VALUES (
    N_SUCURSAL_ID,
    N_SUCURSAL_DIRECCION,
    N_SUCURSAL_TELEFONO
    
  );
END INSERTARSucursales;

SELECT * FROM SUCURSALES;

----- eliminar procedure --------

CREATE OR REPLACE PROCEDURE eliminarSucursales(
    N_SUCURSAL_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM SUCURSALES WHERE  SUCURSAL_ID  =  N_SUCURSAL_ID;
    DBMS_OUTPUT.PUT_LINE('Registro eliminado exitosamente');
END;





----- actualizar ----------------

CREATE OR REPLACE PROCEDURE actualizarSucursales(
  N_SUCURSAL_ID IN NUMBER,
  N_SUCURSAL_DIRECCION IN VARCHAR2,
  N_SUCURSAL_TELEFONO IN NUMBER

)
IS
BEGIN
   UPDATE SUCURSALES
   SET 
      SUCURSAL_DIRECCION = N_SUCURSAL_DIRECCION,
      SUCURSAL_TELEFONO = N_SUCURSAL_TELEFONO
   WHERE
     SUCURSAL_IDD = N_SUCURSAL_ID;
END;

BEGIN
   actualizarSucursales();
END;
----- SELECT -----------------------





----- CRUD CITAS -----------------

------- INSERT CITAS --------
CREATE OR REPLACE PROCEDURE INSERTARCITAS(
  N_CITA_ID IN NUMBER,
  N_CLIENTE_ID IN NUMBER,
  N_MECANICO_ID IN NUMBER,
  N_SUCURSAL_ID IN NUMBER,
  N_CITA_DESCRIPCION IN VARCHAR2,
  N_CITA_FECHA IN VARCHAR2,
  N_CITA_HORA IN VARCHAR2
)
AS
BEGIN
  INSERT INTO CITAS (
    CITA_ID,
    CLIENTE_ID,
    MECANICO_ID,
    SUCURSAL_ID,
    CITA_DESCRIPCION,
    CITA_FECHA,
    CITA_HORA 

  ) VALUES (
    N_CITA_ID,
    N_CLIENTE_ID,
    N_MECANICO_ID,
    N_SUCURSAL_ID,
    N_CITA_DESCRIPCION,
    N_CITA_FECHA,
    N_CITA_HORA
    
  );
END INSERTARCITAS;

SELECT * FROM CITAS;

----- eliminar procedure --------

CREATE OR REPLACE PROCEDURE eliminarCitas(
    N_CITA_ID IN NUMBER
)
IS
BEGIN
    DELETE FROM SUCURSALES WHERE  CITA_ID  =  N_CITA_ID;
    DBMS_OUTPUT.PUT_LINE('Registro eliminado exitosamente');
END;





----- actualizar ----------------

CREATE OR REPLACE PROCEDURE actualizarCitas(
  N_CITA_ID IN NUMBER,
  N_CLIENTE_ID IN NUMBER,
  N_MECANICO_ID IN NUMBER,
  N_SUCURSAL_ID IN NUMBER,
  N_CITA_DESCRIPCION IN VARCHAR2,
  N_CITA_FECHA IN VARCHAR2,
  N_CITA_HORA IN VARCHAR2
)
IS
BEGIN
   UPDATE CITAS
   SET 
      CLIENTE_ID = N_CLIENTE_ID,
      MECANICO_ID = N_MECANICO_ID,
      SUCURSAL_ID = N_SUCURSAL_ID,
      CITA_DESCRIPCION = N_CITA_DESCRIPCION,
      CITA_FECHA = N_CITA_FECHA,
      CITA_HORA = N_CITA_HORA
   WHERE
     CITA_ID = N_CITA_ID;
END;

BEGIN
   actualizarCitas();
END;
----- SELECT -----------------------